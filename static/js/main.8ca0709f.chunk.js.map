{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","Editor","props","id","onChange","handleChange","value","content","Preview","dangerouslySetInnerHTML","__html","App","state","defaultContent","bind","event","this","setState","target","className","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAGMA,EAASC,EAAQ,IAEjBC,EAAS,SAACC,GACZ,OACI,8BACI,0BAAUC,GAAG,SAASC,SAAUF,EAAMG,aAAcC,MAAOJ,EAAMK,aAKvEC,EAAU,SAACN,GACb,OACI,qBAAKC,GAAG,UAAUM,wBAAyB,CAACC,OAAQX,EAAOG,EAAMK,aAInEI,E,kDACF,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,CACTL,QAASM,GAEb,EAAKR,aAAe,EAAKA,aAAaS,KAAlB,gBALL,E,gDAQnB,SAAaC,GACTC,KAAKC,SAAS,CACVV,QAASQ,EAAMG,OAAOZ,U,oBAI9B,WACI,OACI,qBAAKa,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,cAAC,EAAD,CAAQZ,QAASS,KAAKJ,MAAML,QAASF,aAAcW,KAAKX,eACxD,cAAC,EAAD,CAASE,QAASS,KAAKJ,MAAML,mB,GApB/Ba,IAAMC,WA2BlBR,EAAc,2cAsBLF,ICxDAW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ca0709f.chunk.js","sourcesContent":["import './App.css';\nimport React from \"react\";\n\nconst marked = require(\"marked\");\n\nconst Editor = (props) => {\n    return (\n        <div>\n            <textarea id=\"editor\" onChange={props.handleChange} value={props.content} />\n        </div>\n    );\n}\n\nconst Preview = (props) => {\n    return (\n        <div id=\"preview\" dangerouslySetInnerHTML={{__html: marked(props.content)}} />\n    );\n};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: defaultContent\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            content: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Editor content={this.state.content} handleChange={this.handleChange} />\n                    <Preview content={this.state.content} />\n                </header>\n            </div>\n        );\n    }\n}\n\nconst defaultContent = `# Markdown Previewer\nThis is a markdown previewer built using [React](https://reactjs.org).\n\n---\n\n## What You Can Do With Markdown\n- You can make text *italic* with \\`*italic*\\`\n- You can make text **bold** with \\`**bold**\\`\n\nLists are written as follows:\n\n    - List item 1\n    - List item 2\n    - List item 3\n\nYou can also include an image:\n\n![React Logo](https://miro.medium.com/max/500/1*cPh7ujRIfcHAy4kW2ADGOw.png)\n\n>Markdown is great\n`;\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}